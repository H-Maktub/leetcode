from typing import List
class Solution:
    def getBiggestThree(self, grid: List[List[int]]) -> List[int]:
        for i in grid:
            print(i)
        temp = []
        n = len(grid)
        m = len(grid[0])
        for i in range(n):
            for j in range(m):
                num = grid[i][j]
                t = 1
                top = num
                while t<j+1 and t+j<m and i+2*t<n:
                    x = grid[i+2*t][j]
                    top += grid[i+t][j-t]+grid[i+t][j+t]
                    for y in range(1,t):
                        x+= grid[i+t+y][j-t+y]+grid[i+t+y][j+t-y]
                    num = max(num,top+x)
                    t+=1
                print(i,j,num)
                temp.append(num)
        temp.sort()
        print(temp)
        if temp[-1]  == temp[-2] ==temp[-3]:
            return [temp[-1]]
        return [temp[-1],temp[-2],temp[-3]]
a = Solution()
# b = a.getBiggestThree([[3,4,5,1,3],[3,3,4,2,3],[20,30,200,40,10],[1,5,5,4,1],[4,3,2,2,5]])
b = a.getBiggestThree([[40039,36788,65171,57696,22419,5751,24037,31913,24167,54995,33013,68399,1905,69152,23190,31495,11811],[71265,17745,33806,89851,60842,92999,92069,56043,45917,89029,2642,1162,23117,11472,83561,78259,31587],[14304,60713,95496,52628,87245,42788,77158,65451,82043,68323,14596,17515,75778,98026,26922,46865,5640],[39534,48861,35631,50154,30182,81322,44562,81502,71815,77662,30064,92979,13437,5636,56218,88011,68789],[78305,90394,1086,86629,57988,11395,96846,38918,23515,73105,89477,15725,40067,4893,13830,78759,51856],[32259,61633,2247,98013,48167,90333,81020,36397,83880,91331,1781,28162,22497,33007,96538,68240,41378],[8597,63005,57839,92469,96292,1162,49932,16595,39865,83382,13598,63955,53287,58376,83631,33150,4382],[89189,46675,9873,65656,86960,94910,70637,32242,50520,7640,57879,40868,80925,29862,36248,63395,88567],[36939,30469,90648,23723,59183,87713,44796,98097,80302,54313,3282,67436,90297,44270,33524,39793,7448],[40081,38016,43333,74807,80072,97651,92137,75496,75362,43612,56029,35744,90702,41418,72608,7592,90217],[39808,18535,75592,49229,37042,36298,80265,81658,49663,93723,43225,4795,60483,22795,63630,65661,43185],[26774,76389,56275,75771,9553,46895,5250,73905,31476,9964,7525,97438,66490,50375,56659,60483,17678],[76011,79935,39956,87785,90749,76739,28319,23075,55703,48029,11331,23418,31218,5282,80484,46023,60024],[3801,25748,40020,54543,37006,82324,80892,62044,80684,23749,65282,69777,64414,12209,22756,41983,64191],[93848,32057,59158,3927,90944,39407,802,85103,44660,34777,56454,63798,94221,84006,60587,71191,78494],[10340,83882,80025,80113,4462,3163,35971,50852,27482,78222,14716,58919,26423,58749,46452,22590,64772],[35235,96053,4914,25769,45882,22760,69986,73413,91222,96651,6732,45521,29977,37410,54380,10193,48135],[76146,16753,16559,26982,27496,89572,78486,13457,69180,42445,81720,46474,62552,37478,548,12589,91821],[42459,99928,3339,92356,57742,54137,58689,55831,78349,22150,2141,95047,4962,11506,35432,96757,16374],[37611,75635,71908,49897,66475,11113,45643,34007,61666,6218,58063,84208,42673,3229,61276,78527,33529],[98591,26281,95294,13618,30451,79901,64917,83082,2260,23007,75397,17711,92963,26301,65927,18723,94662],[50391,74741,75816,63978,46461,64389,40352,59829,8460,78342,70072,50674,79153,64618,56680,83633,99938],[20935,95943,87985,76918,48643,76134,38419,20274,70525,36590,98960,43961,75446,55404,40057,46447,35205],[55671,10519,50529,87827,26100,84788,26178,70087,83044,88120,38645,27950,50624,15747,31738,25584,74705],[32753,53850,6719,18950,64653,70076,74636,87642,88916,87667,53696,70421,13888,57227,78338,26482,82020]])
