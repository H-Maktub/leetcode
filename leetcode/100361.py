from typing import List
from functools import cache
class Solution:
    def minimumCost(self, m: int, n: int, horizontalCut: List[int], verticalCut: List[int]) -> int:
        @cache
        def cut(x1,x2,y1,y2)->int:
            if x2-x1 == 1 and y2 - y1 == 1:
                return 0
            r1 = 10**18
            if y2 - y1 > 1:
                t = horizontalCut[y1:y2-1]
                i = t.index(max(t))
                r1 = horizontalCut[y1+i] + cut(x1,x2,y1,y1+1+i) + cut(x1,x2,y1+1+i,y2)
            r2 = 10**18
            if x2 - x1 > 1:
                t = verticalCut[x1:x2-1]
                i = t.index(max(t))
                r2 = verticalCut[x1+i] + cut(x1,x1+1+i,y1,y2) + cut(x1+1+i,x2,y1,y2)
            
            return min(r1,r2)
        
        return cut(0,n,0,m)
    

a = Solution()
b = a.minimumCost(998,503,[360,253,28,64,533,291,499,170,478,382,472,603,338,18,612,559,97,185,302,237,438,332,604,109,207,608,341,122,26,213,287,269,259,89,274,321,321,96,648,67,266,9,554,398,639,159,541,518,372,565,592,425,58,171,20,600,520,200,629,526,9,660,207,586,511,579,361,202,93,448,493,156,583,647,39,149,183,578,281,173,362,550,647,450,641,62,432,262,646,659,205,583,373,401,465,282,15,565,660,231,398,496,553,593,587,360,3,315,635,49,339,267,443,49,364,520,173,68,499,609,246,92,105,13,277,474,241,139,448,361,220,298,574,604,581,188,189,557,399,40,606,619,568,407,294,26,617,20,449,246,80,349,518,328,20,353,531,98,275,313,441,578,469,379,267,540,195,570,357,42,41,563,650,567,324,221,181,626,90,615,269,512,190,315,44,228,152,652,52,442,131,217,440,271,160,213,32,86,371,253,79,104,612,566,380,423,555,635,117,31,307,468,557,538,181,362,130,10,439,36,159,236,11,587,572,585,359,548,274,28,420,150,611,493,222,11,647,439,530,262,648,391,271,219,595,577,422,490,157,322,196,158,566,595,217,149,255,274,366,247,233,31,213,212,646,90,387,504,348,338,354,550,519,657,30,316,515,587,133,177,111,54,664,76,503,606,508,496,340,230,33,648,401,228,359,81,196,21,401,536,432,164,445,182,602,38,462,259,567,80,193,312,72,379,233,238,50,662,97,666,468,487,508,311,663,212,445,37,624,244,340,542,415,80,124,159,249,471,375,98,64,40,65,540,123,592,517,270,135,403,57,295,526,156,225,117,216,236,35,354,42,461,619,546,194,205,158,492,139,559,55,555,221,182,112,398,464,273,74,233,542,237,511,568,310,505,434,338,601,37,659,223,10,30,28,553,187,155,373,85,240,553,128,353,6,24,382,579,47,81,638,435,47,78,498,454,229,39,132,300,216,541,38,497,35,299,261,363,190,596,640,171,229,596,396,582,276,442,380,517,233,634,149,52,368,114,145,324,137,570,482,398,512,557,229,46,481,526,365,92,561,306,666,505,624,389,524,70,431,197,413,631,84,484,224,359,583,613,84,68,28,57,661,269,272,437,112,648,608,373,390,448,120,398,155,17,657,162,278,27,108,128,597,302,226,128,225,70,221,437,266,251,76,422,379,478,338,618,395,12,188,494,656,475,531,266,399,619,93,585,572,62,305,623,482,277,33,357,83,49,420,649,149,12,374,376,466,634,270,602,314,66,241,230,22,193,280,447,458,656,324,131,538,49,473,96,255,658,512,41,291,408,257,374,417,418,245,541,187,341,493,77,469,516,390,382,95,224,374,628,576,44,541,276,9,316,263,583,384,600,144,273,53,376,648,306,665,468,243,130,366,2,253,504,120,300,294,452,164,2,481,324,12,644,148,153,256,592,68,576,399,531,107,479,10,342,178,442,76,667,135,240,91,454,563,66,208,660,260,596,391,555,183,426,40,575,406,473,510,50,16,330,443,102,602,129,515,124,419,177,499,466,66,655,364,66,641,461,95,587,453,161,93,321,146,48,305,600,167,517,475,530,257,106,561,236,264,414,568,128,70,221,383,121,654,152,130,396,394,23,551,504,369,410,330,308,599,2,146,56,204,433,32,171,607,189,429,476,619,582,34,17,583,302,369,93,77,18,172,123,143,468,445,187,78,389,425,341,478,379,325,306,372,657,577,445,340,612,486,266,365,27,605,135,503,637,233,19,312,413,356,180,157,628,149,223,370,135,534,406,130,232,625,378,495,335,333,467,188,432,532,245,387,448,476,174,33,53,75,451,32,19,641,168,98,424,397,303,491,66,58,164,197,348,329,207,33,150,640,72,245,65,61,355,325,666,420,608,115,528,308,466,561,100,285,20,620,413,332,416,652,108,663,349,192,470,74,421,413,403,505,240,278,39,219,510,569,572,519,390,468,300,334,577,470,43,448,261,110,238,380,633,128,124,58,46,381,368,47,475,283,305,544,458,254,174,282,96,456,295,438,274,424,298,400,256,663,392,136,109,417,410,343,307,457,295,553,84,75,168,446,252,159,511,368,573,548,613,598,11,4,43,142,391,127,306,284,5,107,329,357,54,157,532,176,648,346,36,461,272,657,579,309,313,235,115,431,287,305,173,428,420,557,438,41,191,482,116,100,226,458,487,401,533,503,396,209,189,250,286,186,525,481,69,228,134,624,198,557,213,112,348,487,577,116,141,374,97,196,651,131,656,268,202,533,580,561],[81,47,565,449,291,72,426,541,413,27,360,214,242,102,571,202,653,33,161,610,203,380,172,433,269,544,477,346,43,165,94,30,283,427,583,133,258,212,610,537,189,622,275,203,426,16,422,479,404,357,411,234,639,403,110,41,349,461,64,72,464,410,95,212,291,517,510,401,180,317,96,56,245,49,373,279,241,66,622,248,535,176,629,499,28,200,657,42,159,560,244,50,126,432,148,254,285,117,38,37,556,459,195,135,553,317,337,400,618,558,241,446,583,594,544,446,291,198,402,516,365,170,437,156,131,458,509,551,188,334,71,177,552,244,663,603,322,64,263,169,572,275,159,268,157,111,503,196,663,101,169,393,535,295,462,439,185,194,133,319,345,456,529,472,145,112,382,461,244,90,159,550,439,551,573,226,613,582,377,516,40,158,153,288,486,610,4,359,248,495,632,92,169,377,647,183,528,667,609,113,129,121,566,368,381,355,410,59,417,604,165,391,345,83,483,50,393,198,657,612,233,397,163,449,587,123,258,472,30,46,317,301,610,653,24,121,166,187,72,610,575,554,626,1,501,43,309,174,572,607,110,443,182,270,32,291,353,205,591,547,433,512,61,141,259,662,505,404,16,168,126,46,13,240,472,224,265,659,58,324,247,429,246,53,624,308,549,292,499,198,573,524,99,93,586,277,552,154,52,172,537,354,232,379,630,640,101,619,511,448,475,365,582,332,122,231,100,441,73,263,294,156,506,364,175,401,180,220,159,534,616,586,509,635,607,62,546,162,122,541,414,130,622,572,324,504,33,169,172,130,96,20,103,423,464,19,285,482,501,31,433,444,592,50,389,14,567,152,209,43,524,254,628,226,461,94,638,299,217,136,554,436,39,181,344,144,238,636,196,213,543,218,197,113,235,346,346,523,555,227,33,553,173,331,319,608,616,556,575,100,62,105,188,424,12,375,71,234,590,649,446,611,226,308,413,574,509,403,350,423,294,567,420,391,354,390,245,501,370,269,102,640,211,366,64,150,406,260,449,569,526,503,204,361,232,229,385,471,636,399,361,17,304,163,365,499,315,245,414,192,331,17,155,550,396,654,522,93,87,309,299,406,653,572,289,69,12,527,196,401,80,138,456,346,520,158,103,284,646,616,367,341])

print(b)

# m =
# 7
# n =
# 4
# horizontalCut =
# [13,6,12,14,4,7]
# verticalCut =
# [14,15,11]
# 258